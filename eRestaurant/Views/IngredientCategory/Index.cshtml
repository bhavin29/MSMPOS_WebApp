@using Microsoft.Extensions.Localization;
@model IEnumerable<RocketPOS.Models.IngredientCategoryModel>
@inject IStringLocalizer<RocketPOS.Resources.RocketPOSResources> SharedLocalizer;
@using  RocketPOS.Resources
@inject LocService SharedLocalizer
@{
    ViewData["Title"] = @SharedLocalizer.GetLocalizedHtmlString("IngredientCategory");
    var dataTableName = @SharedLocalizer.GetLocalizedHtmlString("IngredientCategory");
}
<div class="card">
    <div class="card-header container-fluid">
        <div class="row">
            <div class="col-md-11">
                <h5 class="card-title">Stock Categories</h5>
            </div>
            <div class="float-right">
                <a asp-action="Ingredientcategory" class="btn btn-primary float-sm-left ">Add</a>

            </div>
        </div>
    </div>
    <br/>
    <div class="table-responsive">
        <div id="basic-datatables_wrapper" class="dataTables_wrapper container-fluid dt-bootstrap4">
            <div class="col-sm-12">
                <table id="@SharedLocalizer.GetLocalizedHtmlString("IngredientCategory")" class="display table table-bordered table-hover dataTable" role="grid" aria-describedby="basic-datatables_info">
                    <thead role="row">
                        <tr>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.RawMaterialType)
                            </th>
                            <th>
                                @Html.DisplayName("Stock Category")
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Notes)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsActive)
                            </th>
                            <th>@Html.DisplayName("Action")</th>
                        </tr>
                    </thead>
                    <tfoot role="row">
                        <tr>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.RawMaterialType)
                            </th>
                            <th>
                                @Html.DisplayName("Stock Category")
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Notes)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsActive)
                            </th>
                            <th>@Html.DisplayName("Action")</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var tm = "#myModal" + item.Id;
                            var mid = "myModal" + item.Id;
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.RawMaterialType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IngredientCategoryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Notes)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsActive)
                            </td>
                            <td>
                                <div class="form-button-action">
                                    <a asp-action="IngredientCategory" asp-route-Id="@item.Id">Edit   <i class="fa fa-edit"></i></a>
                                    <label> / </label>
                                    <a href="#" class="fa fa-trash-alt" data-toggle="modal" data-target="@tm">Delete   <i class="fa fa-times"></i></a>
                                </div>

                            </td>
                        </tr>
                            <div class="modal fade" id="@mid" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title" id="myModalLabel">Delete Confirmation</h4>
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                        </div>
                                        <div class="modal-body">
                                            @SharedLocalizer.GetLocalizedHtmlString("DeleteConfrim")
                                        </div>
                                        <div class="modal-footer">
                                            <a asp-action="Delete" asp-route-Id="@item.Id" id="deleteBtn" class="btn bg-danger mr-1">Delete</a>
                                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            table = $('#@dataTableName').DataTable({
                dom: 'Bfrtip',
                "buttons": [{
                    extend: 'excel',
                    exportOptions: { columns: [0, 1, 2, 3] },
                    filename: function () {
                        var d = new Date();
                        var date = d.getFullYear() + '_' + ('0' + (d.getMonth() + 1)).slice(-2) + '_' + ('0' + d.getDate()).slice(-2);
                        var n = d.getTime();
                        return 'Ingredient_Category_' + date + '_' + n;
                    },
                }],
                        "bLengthChange": true,
                        "bInfo": true,
                        "bFilter": true,
                        "ordering": true,
                        "autoWidth": false,
                        "orderCellsTop": true,
                        "stateSave": false,
                        "pageLength": 50,
                        "lengthMenu": [
                            [50, 100, 200, 500],
                            ['50', '100', '200', '500']
                        ],
            });
        });
    </script>
}
