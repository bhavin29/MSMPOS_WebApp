@using Microsoft.Extensions.Localization;
@model IEnumerable<RocketPOS.Models.Reports.InventoryReportModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using  RocketPOS.Resources
@inject LocService SharedLocalizer
@{
    ViewData["Title"] = @SharedLocalizer.GetLocalizedHtmlString("Inventory");
    var dataTableName = @SharedLocalizer.GetLocalizedHtmlString("InventoryReport");
}

@*Dropdown with Ingredient CAtegory, Ingredient, Food menu, ALter Qty*@

<div class="card">
    <div class="card-header container-fluid">
        <div class="row">
            <div class="col-md-11">
                <h5 class="card-title">Current Stock</h5>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="card-body">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Supplier</label>
                            <select Id="SupplierId"
                                    class="form-control">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Store</label>
                            <select Id="StoreId"
                                    class="form-control">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Type</label>
                            <select Id="ItemType"
                                    class="form-control">
                                <option value="0">Menu Item</option>
                                <option value="1">Stock Item</option>
                                <option value="2">Asset Item</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <label class="control-label">Active</label>
                            <select Id="Active"
                                    class="form-control">
                                <option value="0">Active Only</option>
                                <option value="1">All</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2" style="margin:25px 0px">
                        <a id="btnLoadData" onclick="return loadInventoryStockList();" class="btn btn-outline-light" data-dismiss="modal">Load</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="card-body">
            <div class="table-responsive">
                <div id="basic-datatables_wrapper" class="dataTables_wrapper container-fluid dt-bootstrap4">
                    <div class="col-sm-12">
                        <table id="InventoryReport" class="display table table-bordered table-hover dataTable" role="grid" aria-describedby="basic-datatables_info">
                            <thead>
                                <tr role="row">
                                    <th style="width:15%" rowspan="1" colspan="1">@Html.DisplayName("Store")</th>
                                    <th style="width:12%" rowspan="1" colspan="1">@Html.DisplayName("Category")</th>
                                    <th style="width:8%" rowspan="1" colspan="1">@Html.DisplayName("Code")</th>
                                    <th style="width:25%" rowspan="1" colspan="1">@Html.DisplayName("Product")</th>
                                    <th style="width:5%" rowspan="1" colspan="1">@Html.DisplayName("Opening")</th>
                                    <th style="width:5%" rowspan="1" colspan="1">@Html.DisplayName("Qty")</th>
                                    <th style="width:10%" rowspan="1" colspan="1">@Html.DisplayName("Net Purchase")</th>
                                    <th style="width:10%" rowspan="1" colspan="1">@Html.DisplayName("Amount")</th>
                                    <th style="width:8%" rowspan="1" colspan="1">@Html.DisplayName("Alert Qty")</th>
                                    <th style="width:7%" rowspan="1" colspan="1">@Html.DisplayName("Action")</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    var tm = "#myModal" + item.Id;
                                    var mid = "myModal" + item.Id;
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.StoreName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FoodMenuCategoryName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FoodMenuCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FoodMenuName)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.OpeningQty)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.StockQty) @Html.DisplayFor(modelItem => item.Unitname)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.PurchasePrice)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.Amount)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.AlterQty)
                                        </td>
                                        <td>
                                            <div class="form-button-action">
                                                <a asp-action="InventoryDetail" asp-route-id="@item.Id" asp-route-name="@item.FoodMenuName @item.Unitname" asp-route-code="@item.FoodMenuCode" asp-route-stock="@item.StockQty @item.Unitname" asp-route-opening="@item.OpeningQty">Search </a>
                                            </div>
                                        </td>
                                    </tr>
                                    <div class="modal fade" id="@mid" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                                    <h4 class="modal-title" id="myModalLabel">Delete Confirmation</h4>
                                                </div>
                                                <div class="modal-body">
                                                    @SharedLocalizer.GetLocalizedHtmlString("DeleteConfrim")
                                                </div>
                                                <div class="modal-footer">
                                                    <a asp-action="Delete" asp-route-Id="@item.Id" id="deleteBtn" class="btn bg-danger mr-1">Delete</a>
                                                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="aModal" tabindex="-1" role="dialog" aria-labelledby="aModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="aModalLabel">Message</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" id="save" class="btn btn-primary ">Ok</button>
                <button type="button" id="ok" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var InventoryReport = null;
        $(document).ready(function () {

            GetSupplierList();
            GetStoreList();

            InventoryReport = $('#@dataTableName').DataTable({
                dom: 'Bfrtip',
                "buttons": [{
                    extend: 'excel',
                    exportOptions: { columns: [0, 1, 2,3,4,5,6,7,8,9] },
                    filename: function () {
                        var d = new Date();
                        var date = d.getFullYear() + '_' + ('0' + (d.getMonth() + 1)).slice(-2) + '_' + ('0' + d.getDate()).slice(-2);
                        var n = d.getTime();
                        return 'CurrentStock_' + date + '_' + n;
                    },
                    }],
                        "bLengthChange": true,
                        "bInfo": true,
                        "bFilter": true,
                        "ordering": true,
                        "autoWidth": false,
                        "orderCellsTop": true,
                        "stateSave": false,
                        "pageLength": 250,
                        "lengthMenu": [
                            [250, 500, 1000, 2000],
                            ['250', '500', '1000', '2000']
                        ],
            });


            $("#StoreId").select2();
            $("#SupplierId").select2();

         });

        function loadInventoryStockList() {

            if ($("#StoreId").val() == 0) {
                $(".modal-body").text("Select Store");
                $("#save").hide();
                jQuery.noConflict();
                $("#aModal").modal('show');
                return false;
            }

            debugger;
            $.ajaxSetup({ cache: false });
            $.ajax({
                url: "/Report/GetInventoryStockList?supplierId=" + $("#SupplierId").val() + "&storeId=" + $("#StoreId").val() + "&itemType=" + $("#ItemType").val() + "&active=" + $("#Active").val(),
                        dataType: "json",
                        type: "GET",
                        success: function (data) {
                            if (InventoryReport != null) {
                                InventoryReport.clear();
                                InventoryReport.destroy();
                            }
                            InventoryReport = $("#InventoryReport").DataTable({
                                dom: 'Bfrtip',
                                "buttons": [{
                                    extend: 'excel',
                                    exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] },
                                    filename: function () {
                                        var d = new Date();
                                        var date = d.getFullYear() + '_' + ('0' + (d.getMonth() + 1)).slice(-2) + '_' + ('0' + d.getDate()).slice(-2);
                                        var n = d.getTime();
                                        return 'CurrentStock_' + date + '_' + n;
                                    },
                                }],
                                "data": data.inventoryStockList,
                                "columns": [
                                    { "data": "storeName", "name": "StoreName", "autoWidth": true },
                                    { "data": "foodMenuCategoryName", "name": "FoodMenuCategoryName", "autoWidth": true },
                                    { "data": "foodMenuCode", "name": "FoodMenuCode", "autoWidth": true },
                                    { "data": "foodMenuName", "name": "FoodMenuName", "autoWidth": true },
                                    { "data": "openingQty", "name": "OpeningQty", "autoWidth": true, className: "text-right" },
                                    {
                                        data: null,
                                        className: "text-right" ,
                                        mRender: function (data, type, row) {
                                            return row.stockQty + ' ' + row.unitname
                                        },
                                    },
                                    { "data": "purchasePrice", "name": "Net Purchase", "autoWidth": true, "className": "text-right" },
                                    { "data": "amount", "name": "Amount", "autoWidth": true, "className": "text-right"  },
                                    { "data": "alterQty", "name": "Alert Qty", "autoWidth": true, "className": "text-right"  },
                                    {
                                        data: null,
                                        mRender: function (data, type, row) {
                                            return '<div class="form-button-action"><a href="/Report/InventoryDetail/' + row.id + '?name=' + row.foodMenuName + ' ' + row.unitname + '&code=' + row.foodMenuCode + '&stock=' + row.stockQty + ' ' + row.unitname + '&opening=' + row.openingQty +'">Search</a></div>'
                                        },
                                    }
                                ],
                                columnDefs: [
                                    {
                                        targets: [4,6,7,8],
                                        render: $.fn.dataTable.render.number(',', '.', 2)
                                    },
                                    {
                                       targets: [4], orderable: false
                                    }
                                ],
                                "bLengthChange": true,
                                "bInfo": true,
                                "bFilter": true,
                                "ordering": true,
                                "autoWidth": false,
                                "orderCellsTop": true,
                                "stateSave": false,
                                "pageLength": 200,
                                "lengthMenu": [
                                    [200, 500, 1000],
                                    ['200', '500', '1000']
                                ],
                            });
                        },
                        error: function (jqxhr, status, exception) {
                            alert('Exception:', exception);
                        }
                    });
        }

                function GetSupplierList() {
                    $.ajax({
                        url: "/PurchaseInvoiceFoodMenu/GetSupplierList",
                        data: {},
                        type: "GET",
                        dataType: "text",
                        success: function (data) {
                            $("#SupplierId").empty();
                            var obj = JSON.parse(data);
                            for (var i = 0; i < obj.supplierList.length; ++i) {
                                $("#SupplierId").append('<option value="' + obj.supplierList[i].value + '">' + obj.supplierList[i].text + '</option>');
                            }
                        },
                        error: function (data) {
                            alert(data);
                        }
                    });
                }

                function GetStoreList() {
                    $.ajax({
                        url: "/Report/GetStoreList",
                        data: {},
                        type: "GET",
                        dataType: "text",
                        success: function (data) {
                            $("#StoreId").empty();
                            var obj = JSON.parse(data);
                            for (var i = 0; i < obj.storeList.length; ++i) {
                                $("#StoreId").append('<option value="' + obj.storeList[i].value + '">' + obj.storeList[i].text + '</option>');
                            }
                        },
                        error: function (data) {
                            alert(data);
                        }
                    });
                }
    </script>
}
